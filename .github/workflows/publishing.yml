name: Publishing

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:

  linters:
    name: Run linters
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        toxenv: [ lint, format, sort, analyze ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - run: pip install tox
      - run: tox
        env:
          TOXENV: ${{ matrix.toxenv }}

  tests:
    name: Run tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - run: pip install tox
      - run: |
          cat <<EOF > ./tests/integration/.env
          ABSOLUTE_PATH_TO_PROJECT=${{ github.workspace }}
          EOF
      - run: |
          cat <<EOF > ./tests/integration/redis/.env
          PROJECT_NAME=integration
          REDIS_VERSION=7.4.3-alpine
          REDIS_HOST=0.0.0.0
          REDIS_PORT=6379
          REDIS_DB=0
          REDIS_USER=default
          REDIS_PASSWORD=password
          RESTART_POLICY=no
          REDIS_MEM_LIMIT=100M
          REDIS_MEM_RESERVATION=100M
          EOF
      - run: tox
        env:
          TOXENV: 3.13

  build-n-publish:
    runs-on: ubuntu-24.04
    needs: [ tests, linters ]
    steps:
      - uses: actions/checkout@v3
      - name: Build and Publish
        uses: JRubics/poetry-publish@v2.1
        with:
          python_version: "3.13"
          poetry_install_options: "--without dev"
          # pypi.org
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
          # test.pypi.org
#          repository_name: "testpypi"
#          repository_username: "__token__"
#          repository_password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository_url: "https://test.pypi.org/legacy/"
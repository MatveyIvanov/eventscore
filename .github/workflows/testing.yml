name: Tests, linters, analyzers and formatters

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - "feature*"
      - "bugfix*"
      - "docfix*"
      - "hotfix*"

jobs:

  linters:
    name: Run linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toxenv: [ lint, format, sort, analyze ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - run: pip install tox
      - run: tox
        env:
          TOXENV: ${{ matrix.toxenv }}

  test-on-different-versions:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11, 3.12, 3.13 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install tox
      - run: |
          cat <<EOF > ./tests/integration/.env
          ABSOLUTE_PATH_TO_PROJECT=${GITHUB_WORKSPACE}
          EOF
      - run: |
          cat <<EOF > ./tests/integration/redis/.env
          PROJECT_NAME=integration
          REDIS_VERSION=7.4.3-alpine
          REDIS_HOST=0.0.0.0
          REDIS_PORT=6379
          REDIS_DB=0
          REDIS_USER=default
          REDIS_PASSWORD=password
          RESTART_POLICY=no
          REDIS_MEM_LIMIT=100M
          REDIS_MEM_RESERVATION=100M
          EOF
      - run: tox
        env:
          TOXENV: ${{ matrix.python-version }}

  test-coverage:
    name: Run tests with coverage
    runs-on: ubuntu-latest
    env:
      DEPENDENCY_INJECTOR_DEBUG_MODE: 1
      PIP_VERBOSE: 1
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - run: pip install tox
      - run: |
          cat <<EOF > ./tests/integration/.env
          ABSOLUTE_PATH_TO_PROJECT=${GITHUB_WORKSPACE}
          EOF
      - run: |
          cat <<EOF > ./tests/integration/redis/.env
          PROJECT_NAME=integration
          REDIS_VERSION=7.4.3-alpine
          REDIS_HOST=0.0.0.0
          REDIS_PORT=6379
          REDIS_DB=0
          REDIS_USER=default
          REDIS_PASSWORD=password
          RESTART_POLICY=no
          REDIS_MEM_LIMIT=100M
          REDIS_MEM_RESERVATION=100M
          EOF
      - run: tox -vv
        env:
          TOXENV: coveralls
